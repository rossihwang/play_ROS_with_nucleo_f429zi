/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_ENCODER_PB_H_INCLUDED
#define PB_ENCODER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Encoder {
    uint32_t lwheel;
    uint32_t rwheel;
} Encoder;


/* Initializer values for message structs */
#define Encoder_init_default                     {0, 0}
#define Encoder_init_zero                        {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Encoder_lwheel_tag                       1
#define Encoder_rwheel_tag                       2

/* Struct field encoding specification for nanopb */
#define Encoder_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   lwheel,            1) \
X(a, STATIC,   SINGULAR, UINT32,   rwheel,            2)
#define Encoder_CALLBACK NULL
#define Encoder_DEFAULT NULL

extern const pb_msgdesc_t Encoder_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Encoder_fields &Encoder_msg

/* Maximum encoded size of messages (where known) */
#define Encoder_size                             12

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
